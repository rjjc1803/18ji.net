@{
    Layout = null;
}

<!DOCTYPE>
<html>
<head>
    <title>完整demo</title>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <script type="text/javascript" charset="utf-8" src="~/UEditor/ueditor.config.js"></script>
    <script type="text/javascript" charset="utf-8" src="~/UEditor/ueditor.all.min.js"> </script>
    <!--建议手动加在语言，避免在ie下有时因为加载语言失败导致编辑器加载失败-->
    <!--这里加载的语言文件会覆盖你在配置项目里添加的语言类型，比如你在配置项目里配置的是英文，这里加载的中文，那最后就是中文-->
    <script type="text/javascript" charset="utf-8" src="~/UEditor/lang/zh-cn/zh-cn.js"></script>
    <!--添加按钮-->
    <script src="~/UEditor/ueditor.parse.min.js"></script>

    <script src="~/UEditor/ueditor.config.js"></script>
    <script src="~/UEditor/ueditor.all.min.js"></script>
    <style type="text/css">
        div {
            width: 100%;
        }

       #main {
            width: 45%;
            height: 100%;
            margin-top: 50px;
            margin-left: 15%;
            flex-wrap: nowrap; /*容器内项目换行方式*/
        }
    </style>
</head>
<body>
    <div id="main">
        <div>
            <script id="editor" type="text/plain" style="width:700px;height:450px;">
            </script>

        </div>
        <div id="btns">
            <div>
                <button onclick="getContent()">保存试卷</button>
                @*<button onclick="setContent()">写入内容</button>*@
                <button onclick="setContent(true)">追加内容</button>
                <button onclick="getContentTxt()">获得纯文本</button>
                <button onclick="getPlainTxt()">获得带格式的纯文本</button>
                <button onclick="hasContent()">判断是否有内容</button>
                <button onclick="setFocus()">使编辑器获得焦点</button>
            </div>
            <div>            
                <button onclick="insertHtml()">插入给定的内容</button>
                <button id="enable" onclick="setEnabled()">可以编辑</button>
                <button onclick="setDisabled()">不可编辑</button>
                <button onclick=" UE.getEditor('editor').setHide()">隐藏编辑器</button>
                <button onclick=" UE.getEditor('editor').setShow()">显示编辑器</button>
                <button onclick=" UE.getEditor('editor').setHeight(300)">设置高度为300默认关闭了自动长高</button>
            </div>

            <div>
                <button onclick="getLocalData()">获取草稿箱内容</button>
                <button onclick="clearLocalData()">清空草稿箱</button>
            </div>

        </div>
      </div>
        <script type="text/javascript">

            //实例化编辑器           
            var ue = UE.getEditor('editor', {
                toolbars: [
                    ['bold', 'italic', 'superscript', 'subscript', 'pasteplain', 'simpleupload', 'inserttable', 'insertcode', 'redo']
                ],
                //autoFloatEnabled: true
                autoHeightEnabled:false,
                allowDivTransToP: false
            });


            UE.registerUI('文本行', function (editor, uiName) {
                //注册按钮执行时的command命令，使用命令默认就会带有回退操作
                editor.registerCommand(uiName, {
                    execCommand: function () {
                        alert('execCommand:' + uiName)
                    }
                });
                //创建一个button
                var btn = new UE.ui.Button({
                    //按钮的名字
                    name: uiName,
                    //提示
                    title: uiName,
                    //添加额外样式，指定icon图标，这里默认使用一个重复的icon
                    cssRules: 'background-position: -500px 0;',
                    //点击时执行的命令
                    onclick: function () {
                        //这里可以不用执行命令,做你自己的操作也可
                        var content = `<div id="content"><br/>`
                        UE.getEditor('editor').execCommand('insertHtml', content);
                        UE.getEditor('editor').focus();
                    }
                });
                //当点到编辑内容上时，按钮要做的状态反射
                editor.addListener('selectionchange', function () {
                    var state = editor.queryCommandState(uiName);
                    if (state == -1) {
                        btn.setDisabled(true);
                        btn.setChecked(false);
                    } else {
                        btn.setDisabled(false);
                        btn.setChecked(state);
                    }
                });
                return btn;
            });

            UE.registerUI('单选题', function (editor, uiName) {
                //注册按钮执行时的command命令，使用命令默认就会带有回退操作
                editor.registerCommand(uiName, {
                    execCommand: function () {
                        alert('execCommand:' + uiName)
                    }
                });
                //创建一个button
                var btn = new UE.ui.Button({
                    //按钮的名字
                    name: uiName,
                    //提示
                    title: uiName,
                    //添加额外样式，指定icon图标，这里默认使用一个重复的icon
                    cssRules: 'background-position: -500px 0;',
                    //点击时执行的命令
                    onclick: function () {
                        //这里可以不用执行命令,做你自己的操作也可
                        var content = `<div id="content" style="margin-bottom:15px;border:solid;border-width:0.1px;border-color:#C4A699"><span>1.</span><br/>     <input type="radio" value="1" name="select" />A<br />     <input type="radio" value="2" name="select" />B<br />     <input type="radio" value="3" name="select" />C<br />     <input type="radio" value="4" name="select" />D<br />
             <span>参考答案:</span><br/>
             <span>分数：</span><br/></div>`
                        UE.getEditor('editor').execCommand('insertHtml',content);
                        UE.getEditor('editor').focus();
                    }
                });
                //当点到编辑内容上时，按钮要做的状态反射
                editor.addListener('selectionchange', function () {
                    var state = editor.queryCommandState(uiName);
                    if (state == -1) {
                        btn.setDisabled(true);
                        btn.setChecked(false);
                    } else {
                        btn.setDisabled(false);
                        btn.setChecked(state);
                    }
                });
                return btn;
            });

            UE.registerUI('多选题', function (editor, uiName) {
                //注册按钮执行时的command命令，使用命令默认就会带有回退操作
                editor.registerCommand(uiName, {
                    execCommand: function () {
                        alert('execCommand:' + uiName)
                    }
                });
                //创建一个button
                var btn = new UE.ui.Button({
                    //按钮的名字
                    name: uiName,
                    //提示
                    title: uiName,
                    //添加额外样式，指定icon图标，这里默认使用一个重复的icon
                    cssRules: 'background-position: -500px 0;',
                    //点击时执行的命令
                    onclick: function () {
                        //这里可以不用执行命令,做你自己的操作也可
                        var content = `<div id="content" style="margin-bottom:15px;border:solid;border-width:0.5px;border-color:#C4A699"><span>1.</span><br/>     <input type="checkbox" value="1" name="select" />A<br />     <input type="checkbox" value="2" name="select" />B<br />     <input type="checkbox" value="3" name="select" />C<br />     <input type="checkbox" value="4" name="select" />D<br />
             <span>参考答案:</span><br/>
             <span>分数：</span><br/></div>`
                        UE.getEditor('editor').execCommand('insertHtml', content);
                        UE.getEditor('editor').focus();

                    }
                });
                //当点到编辑内容上时，按钮要做的状态反射
                editor.addListener('selectionchange', function () {
                    var state = editor.queryCommandState(uiName);
                    if (state == -1) {
                        btn.setDisabled(true);
                        btn.setChecked(false);
                    } else {
                        btn.setDisabled(false);
                        btn.setChecked(state);
                    }
                });
                return btn;
            });

            UE.registerUI('判断题', function (editor, uiName) {
                //注册按钮执行时的command命令，使用命令默认就会带有回退操作
                editor.registerCommand(uiName, {
                    execCommand: function () {
                        alert('execCommand:' + uiName)
                    }
                });
                //创建一个button
                var btn = new UE.ui.Button({
                    //按钮的名字
                    name: uiName,
                    //提示
                    title: uiName,
                    //添加额外样式，指定icon图标，这里默认使用一个重复的icon
                    cssRules: 'background-position: -500px 0;',
                    //点击时执行的命令
                    onclick: function () {
                        //这里可以不用执行命令,做你自己的操作也可
                        var content = `<div id="content" style="margin-bottom:15px;border:solid;border-width:0.5px;border-color:#C4A699"><span>1.</span><br/>      <span>参考答案:</span>   <input type="radio" value="1" name="select" />√<input type="radio" value="2" name="select" style="margin-left:25px;"/>×<br />      <span>分数：</span><br/></div>`
                        UE.getEditor('editor').execCommand('insertHtml', content);
                        UE.getEditor('editor').focus();

                    }
                });
                //当点到编辑内容上时，按钮要做的状态反射
                editor.addListener('selectionchange', function () {
                    var state = editor.queryCommandState(uiName);
                    if (state == -1) {
                        btn.setDisabled(true);
                        btn.setChecked(false);
                    } else {
                        btn.setDisabled(false);
                        btn.setChecked(state);
                    }
                });
                return btn;
            });

            UE.registerUI('填空题', function (editor, uiName) {
                //注册按钮执行时的command命令，使用命令默认就会带有回退操作
                editor.registerCommand(uiName, {
                    execCommand: function () {
                        alert('execCommand:' + uiName)
                    }
                });
                //创建一个button
                var btn = new UE.ui.Button({
                    //按钮的名字
                    name: uiName,
                    //提示
                    title: uiName,
                    //添加额外样式，指定icon图标，这里默认使用一个重复的icon
                    cssRules: 'background-position: -500px 0;',
                    //点击时执行的命令
                    onclick: function () {
                        //这里可以不用执行命令,做你自己的操作也可
                        var content = `<div id="content" style="margin-bottom:15px;border:solid;border-width:0.5px;border-color:#C4A699"><span>1.</span><br/>     <span>分数(每空):</span><br/>     <span>分数(总分):</span></div>`

                        UE.getEditor('editor').execCommand('insertHtml', content);
                        UE.getEditor('editor').focus();
                    }
                });
                //当点到编辑内容上时，按钮要做的状态反射
                editor.addListener('selectionchange', function () {
                    var state = editor.queryCommandState(uiName);
                    if (state == -1) {
                        btn.setDisabled(true);
                        btn.setChecked(false);
                    } else {
                        btn.setDisabled(false);
                        btn.setChecked(state);
                    }
                });
                return btn;
            });

            UE.registerUI('问答题', function (editor, uiName) {
                //注册按钮执行时的command命令，使用命令默认就会带有回退操作
                editor.registerCommand(uiName, {
                    execCommand: function () {
                        alert('execCommand:' + uiName)
                    }
                });
                //创建一个button
                var btn = new UE.ui.Button({
                    //按钮的名字
                    name: uiName,
                    //提示
                    title: uiName,
                    //添加额外样式，指定icon图标，这里默认使用一个重复的icon
                    cssRules: 'background-position: -500px 0;',
                    //点击时执行的命令
                    onclick: function () {
                        //这里可以不用执行命令,做你自己的操作也可
                        var content = `<div id="content" style="margin-bottom:15px;border:solid;border-width:0.5px;border-color:#C4A699"><span>1.</span><br/>     <span>参考答案:</span><br/>     <input type="txt" value="" style="width:650px;"/><br/>     <span>分数:</span></div>`
                        UE.getEditor('editor').execCommand('insertHtml', content);
                        UE.getEditor('editor').focus();
                    }
                });
                //当点到编辑内容上时，按钮要做的状态反射
                editor.addListener('selectionchange', function () {
                    var state = editor.queryCommandState(uiName);
                    if (state == -1) {
                        btn.setDisabled(true);
                        btn.setChecked(false);
                    } else {
                        btn.setDisabled(false);
                        btn.setChecked(state);
                    }
                });
                return btn;
            });

            ue.getEditor('editor').setHeight(300);


            //获得类容 HTML
            function getContent() {
                var arr = [];
                arr.push(UE.getEditor('editor').getContent());
                var txt = arr;
                //TODO
                //文件流 传给后端保存
              var  content = content.replace(new RegExp("<","g"),"<").replace(new RegExp(">","g"),">").replace(new RegExp("\"","g"),"");
                 $("#editorValue").val(content);
                $("#ueform").submit();
               // alert(arr.join("\n"));
            }

            //带格式的纯文本
            function getPlainTxt() {
                var arr = [];
                arr.push(UE.getEditor('editor').getPlainTxt());
                alert(arr.join('\n'))
            }

            //
            function insertHtml() {
                //var value = prompt('插入html代码', '');
                //TODO
                //数据库读取 写入文本
                UE.getEditor('editor').execCommand('insertHtml', value)
            }


            


            function isFocus(e) {
                alert(UE.getEditor('editor').isFocus());
                UE.dom.domUtils.preventDefault(e)
            }
            function setblur(e) {
                UE.getEditor('editor').blur();
                UE.dom.domUtils.preventDefault(e)
            }

            function createEditor() {
                enableBtn();
                UE.getEditor('editor');
            }





            function setContent(isAppendTo) {
                var arr = [];
                arr.push("使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容");
                UE.getEditor('editor').setContent('欢迎使用ueditor', isAppendTo);
                alert(arr.join("\n"));
            }
            function setDisabled() {
                UE.getEditor('editor').setDisabled('fullscreen');
                disableBtn("enable");
            }

            function setEnabled() {
                UE.getEditor('editor').setEnabled();
                enableBtn();
            }

            function getText() {
                //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
                var range = UE.getEditor('editor').selection.getRange();
                range.select();
                var txt = UE.getEditor('editor').selection.getText();
                alert(txt)
            }

            function getContentTxt() {
                var arr = [];
                arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
                arr.push("编辑器的纯文本内容为：");
                arr.push(UE.getEditor('editor').getContentTxt());
                alert(arr.join("\n"));
            }
            function hasContent() {
                var arr = [];
                arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
                arr.push("判断结果为：");
                arr.push(UE.getEditor('editor').hasContents());
                alert(arr.join("\n"));
            }
            function setFocus() {
                UE.getEditor('editor').focus();
            }
            function deleteEditor() {
                disableBtn();
                UE.getEditor('editor').destroy();
            }
            function disableBtn(str) {
                var div = document.getElementById('btns');
                var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
                for (var i = 0, btn; btn = btns[i++];) {
                    if (btn.id == str) {
                        UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
                    } else {
                        btn.setAttribute("disabled", "true");
                    }
                }
            }
            function enableBtn() {
                var div = document.getElementById('btns');
                var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
                for (var i = 0, btn; btn = btns[i++];) {
                    UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
                }
            }

            function getLocalData() {
                alert(UE.getEditor('editor').execCommand("getlocaldata"));
            }

            function clearLocalData() {
                UE.getEditor('editor').execCommand("clearlocaldata");
                alert("已清空草稿箱")
            }
        </script>
</body>
</html>

